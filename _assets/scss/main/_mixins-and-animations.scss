$breakpoints: (
  'site-min-width': ( max-width: 259px ),
  'phone': ( min-width:  260px ),
  'tablet': (min-width: 605px ),
  'pc': ( min-width: 1025px ),
  'tv': ( min-width: 1921px )
) !default;

@mixin mediaScreenFor($breakpoint) {
    @if map-has-key($breakpoints, $breakpoint) {
      @media #{inspect(map-get($breakpoints, $breakpoint))} {
        @content;
      }
    }
   
    @else {
      @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. " + "Available breakpoints are: #{map-keys($breakpoints)}.";
    }
}

@mixin animationEaseOut($seconds) {
  transition: all #{$seconds}s ease-out;
}

@mixin animationFlyingEnvelope {
  animation-name: move-flying-envelope;
  animation-duration: 5s;
  animation-iteration-count: infinite;
  animation-timing-function: linear;
  animation-direction: alternate-reverse;
}

@mixin animationOddWorks {
  animation-name: show-odd-works;
  animation-duration: 1s;
  animation-delay: 0s;
}

@mixin animationEvenWorks {
  animation-name: show-even-works;
  animation-duration: 1s;
  animation-delay: 0s;
}

// animations
@keyframes move-flying-envelope {
  from {
    left: 0%;
  }

  to {
    left: calc(100% - 265px); // -256px is width of image
  }
}

@keyframes show-odd-works {
  from {
      opacity: 0;
      transform: translateX(-20rem);
  }

  to {
      opacity: 1;
      transform: translateX(0);
  }
}

@keyframes show-even-works {
  from {
      opacity: 0;
      transform: translateX(20rem);
  }

  to {
      opacity: 1;
      transform: translateX(0);
  }
}